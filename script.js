(function() {
  var Typewriter, type;

  Typewriter = class Typewriter {
    constructor($wrap) {
      this.typeIt = this.typeIt.bind(this);
      this.deleteIt = this.deleteIt.bind(this);
      this.delayedDelete = this.delayedDelete.bind(this);
      this.$wrap = $wrap;
      this.$type = this.$wrap.find('.anim-type');
      this.text = this.$type.data('text');
      this.typeIt(this.text[0], true);
    }

    typeIt(string, bool) {
      var i, j, len, letter, results, text;
      text = string.split('');
      results = [];
      for (i = j = 0, len = text.length; j < len; i = ++j) {
        letter = text[i];
        results.push(((letter, i) => {
          return setTimeout(() => {
            this.$type.html(this.$type.html() + letter);
            if (bool === true && i === string.length - 1) {
              return this.delayedDelete();
            }
          }, 100 * i);
        })(letter, i));
      }
      return results;
    }

    deleteIt(bool) {
      var currentText, i, j, len, letter, results;
      currentText = this.$type.text();
      if (currentText === this.text[0]) {
        this.string = this.text[1];
      }
      if (currentText === this.text[1]) {
        this.string = this.text[2];
      }
      if (currentText === this.text[2]) {
        this.string = this.text[3];
      }
      if (currentText === this.text[3]) {
        this.string = this.text[0];
      }
      results = [];
      for (i = j = 0, len = currentText.length; j < len; i = ++j) {
        letter = currentText[i];
        results.push(((letter, i) => {
          return setTimeout(() => {
            this.$type.html(this.$type.html().slice(0, -1));
            if (bool === true && i === currentText.length - 1) {
              return this.typeIt(this.string, true);
            }
          }, 100 * i);
        })(letter, i));
      }
      return results;
    }

    delayedDelete() {
      return setTimeout(() => {
        return this.deleteIt(true);
      }, 5000);
    }

  };

  type = new Typewriter($('.anim'));

}).call(this);

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiPGFub255bW91cz4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQSxNQUFBLFVBQUEsRUFBQTs7RUFBTSxhQUFOLE1BQUEsV0FBQTtJQUNFLFdBQWEsTUFBQSxDQUFBO1VBTWIsQ0FBQSxhQUFBLENBQUE7VUFVQyxDQUFBLGVBQUEsQ0FBQTtVQWdCQSxDQUFBLG9CQUFBLENBQUE7TUFoQ2EsSUFBQyxDQUFBO01BQ2IsSUFBQyxDQUFBLEtBQUQsR0FBUyxJQUFDLENBQUEsS0FBSyxDQUFDLElBQVAsQ0FBWSxZQUFaO01BQ1QsSUFBQyxDQUFBLElBQUQsR0FBUSxJQUFDLENBQUEsS0FBSyxDQUFDLElBQVAsQ0FBWSxNQUFaO01BRVIsSUFBQyxDQUFBLE1BQUQsQ0FBUSxJQUFDLENBQUEsSUFBSSxDQUFDLENBQUQsQ0FBYixFQUFrQixJQUFsQjtJQUpXOztJQU1iLE1BQVEsQ0FBQyxNQUFELEVBQVMsSUFBVCxDQUFBO0FBQ1YsVUFBQSxDQUFBLEVBQUEsQ0FBQSxFQUFBLEdBQUEsRUFBQSxNQUFBLEVBQUEsT0FBQSxFQUFBO01BQUksSUFBQSxHQUFPLE1BQU0sQ0FBQyxLQUFQLENBQWEsRUFBYjtBQUVQO01BQUEsS0FBQSw4Q0FBQTs7cUJBQ0ssQ0FBQSxDQUFDLE1BQUQsRUFBUyxDQUFULENBQUEsR0FBQTtpQkFDRCxVQUFBLENBQVcsQ0FBQSxDQUFBLEdBQUE7WUFDVCxJQUFDLENBQUEsS0FBSyxDQUFDLElBQVAsQ0FBWSxJQUFDLENBQUEsS0FBSyxDQUFDLElBQVAsQ0FBQSxDQUFBLEdBQWdCLE1BQTVCO1lBQ0EsSUFBRyxJQUFBLEtBQVEsSUFBUixJQUFpQixDQUFBLEtBQUssTUFBTSxDQUFDLE1BQVAsR0FBZ0IsQ0FBekM7cUJBQWdELElBQUMsQ0FBQSxhQUFELENBQUEsRUFBaEQ7O1VBRlMsQ0FBWCxFQUdFLEdBQUEsR0FBTSxDQUhSO1FBREMsQ0FBQSxFQUFDLFFBQVE7TUFEZCxDQUFBOztJQUhNOztJQVVQLFFBQVUsQ0FBQyxJQUFELENBQUE7QUFDYixVQUFBLFdBQUEsRUFBQSxDQUFBLEVBQUEsQ0FBQSxFQUFBLEdBQUEsRUFBQSxNQUFBLEVBQUE7TUFBSSxXQUFBLEdBQWMsSUFBQyxDQUFBLEtBQUssQ0FBQyxJQUFQLENBQUE7TUFDZCxJQUFHLFdBQUEsS0FBZSxJQUFDLENBQUEsSUFBSSxDQUFDLENBQUQsQ0FBdkI7UUFBZ0MsSUFBQyxDQUFBLE1BQUQsR0FBVSxJQUFDLENBQUEsSUFBSSxDQUFDLENBQUQsRUFBL0M7O01BQ0EsSUFBRyxXQUFBLEtBQWUsSUFBQyxDQUFBLElBQUksQ0FBQyxDQUFELENBQXZCO1FBQWdDLElBQUMsQ0FBQSxNQUFELEdBQVUsSUFBQyxDQUFBLElBQUksQ0FBQyxDQUFELEVBQS9DOztNQUNBLElBQUcsV0FBQSxLQUFlLElBQUMsQ0FBQSxJQUFJLENBQUMsQ0FBRCxDQUF2QjtRQUFnQyxJQUFDLENBQUEsTUFBRCxHQUFVLElBQUMsQ0FBQSxJQUFJLENBQUMsQ0FBRCxFQUEvQzs7TUFDQSxJQUFHLFdBQUEsS0FBZSxJQUFDLENBQUEsSUFBSSxDQUFDLENBQUQsQ0FBdkI7UUFBZ0MsSUFBQyxDQUFBLE1BQUQsR0FBVSxJQUFDLENBQUEsSUFBSSxDQUFDLENBQUQsRUFBL0M7O0FBSUE7TUFBQSxLQUFBLHFEQUFBOztxQkFDSyxDQUFBLENBQUMsTUFBRCxFQUFTLENBQVQsQ0FBQSxHQUFBO2lCQUNELFVBQUEsQ0FBVyxDQUFBLENBQUEsR0FBQTtZQUNULElBQUMsQ0FBQSxLQUFLLENBQUMsSUFBUCxDQUFZLElBQUMsQ0FBQSxLQUFLLENBQUMsSUFBUCxDQUFBLENBQWEsQ0FBQyxLQUFkLENBQW9CLENBQXBCLEVBQXVCLENBQUMsQ0FBeEIsQ0FBWjtZQUNBLElBQUcsSUFBQSxLQUFRLElBQVIsSUFBaUIsQ0FBQSxLQUFLLFdBQVcsQ0FBQyxNQUFaLEdBQXFCLENBQTlDO3FCQUFxRCxJQUFDLENBQUEsTUFBRCxDQUFRLElBQUMsQ0FBQSxNQUFULEVBQWlCLElBQWpCLEVBQXJEOztVQUZTLENBQVgsRUFHRSxHQUFBLEdBQU0sQ0FIUjtRQURDLENBQUEsRUFBQyxRQUFRO01BRGQsQ0FBQTs7SUFUUzs7SUFnQlYsYUFBZSxDQUFBLENBQUE7YUFDZCxVQUFBLENBQVcsQ0FBQSxDQUFBLEdBQUE7ZUFDVCxJQUFDLENBQUEsUUFBRCxDQUFVLElBQVY7TUFEUyxDQUFYLEVBRUUsSUFGRjtJQURjOztFQWpDbEI7O0VBd0NBLElBQUEsR0FBTyxJQUFJLFVBQUosQ0FBZSxDQUFBLENBQUUsT0FBRixDQUFmO0FBeENQIiwic291cmNlc0NvbnRlbnQiOlsiY2xhc3MgVHlwZXdyaXRlclxuICBjb25zdHJ1Y3RvcjogKEAkd3JhcCkgLT5cbiAgICBAJHR5cGUgPSBAJHdyYXAuZmluZCgnLmFuaW0tdHlwZScpXG4gICAgQHRleHQgPSBAJHR5cGUuZGF0YSgndGV4dCcpXG4gICAgXG4gICAgQHR5cGVJdChAdGV4dFswXSwgdHJ1ZSlcbiAgICBcbiAgdHlwZUl0OiAoc3RyaW5nLCBib29sKSA9PlxuICAgIHRleHQgPSBzdHJpbmcuc3BsaXQoJycpXG4gICAgXG4gICAgZm9yIGxldHRlciwgaSBpbiB0ZXh0XG4gICAgICBkbyAobGV0dGVyLCBpKSA9PlxuICAgICAgICBzZXRUaW1lb3V0ID0+XG4gICAgICAgICAgQCR0eXBlLmh0bWwoQCR0eXBlLmh0bWwoKSArIGxldHRlcilcbiAgICAgICAgICBpZiBib29sID09IHRydWUgYW5kIGkgPT0gc3RyaW5nLmxlbmd0aCAtIDEgdGhlbiBAZGVsYXllZERlbGV0ZSgpXG4gICAgICAgICwgMTAwICogaVxuICAgICAgICAgICAgXG4gICBkZWxldGVJdDogKGJvb2wpID0+XG4gICAgY3VycmVudFRleHQgPSBAJHR5cGUudGV4dCgpXG4gICAgaWYgY3VycmVudFRleHQgPT0gQHRleHRbMF0gdGhlbiBAc3RyaW5nID0gQHRleHRbMV1cbiAgICBpZiBjdXJyZW50VGV4dCA9PSBAdGV4dFsxXSB0aGVuIEBzdHJpbmcgPSBAdGV4dFsyXVxuICAgIGlmIGN1cnJlbnRUZXh0ID09IEB0ZXh0WzJdIHRoZW4gQHN0cmluZyA9IEB0ZXh0WzNdXG4gICAgaWYgY3VycmVudFRleHQgPT0gQHRleHRbM10gdGhlbiBAc3RyaW5nID0gQHRleHRbMF1cbiAgICBcbiAgICBcblxuICAgIGZvciBsZXR0ZXIsIGkgaW4gY3VycmVudFRleHRcbiAgICAgIGRvIChsZXR0ZXIsIGkpID0+XG4gICAgICAgIHNldFRpbWVvdXQgPT4gICAgICAgXG4gICAgICAgICAgQCR0eXBlLmh0bWwgQCR0eXBlLmh0bWwoKS5zbGljZSgwLCAtMSlcbiAgICAgICAgICBpZiBib29sID09IHRydWUgYW5kIGkgPT0gY3VycmVudFRleHQubGVuZ3RoIC0gMSB0aGVuIEB0eXBlSXQoQHN0cmluZywgdHJ1ZSlcbiAgICAgICAgLCAxMDAgKiBpXG4gICAgICAgIFxuICAgZGVsYXllZERlbGV0ZTogPT5cbiAgICBzZXRUaW1lb3V0ID0+XG4gICAgICBAZGVsZXRlSXQodHJ1ZSlcbiAgICAsIDUwMDAgXG4gICAgXG4gICAgXG4gICAgXG50eXBlID0gbmV3IFR5cGV3cml0ZXIgJCAnLmFuaW0nXG4iXX0=
//# sourceURL=coffeescript